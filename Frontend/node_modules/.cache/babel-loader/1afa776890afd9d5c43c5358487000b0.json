{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Checkout\\\\Desktop\\\\RetinaScan\\\\Frontend\\\\src\\\\Components\\\\ImageUpload.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.singleFileChangedHandler = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.singleFileUploadHandler = event => {\n      const imageData = new FormData();\n\n      if (this.state.selectedFile) {\n        imageData.append(\"patientId\", 1234);\n        imageData.append('retinaImage', this.state.selectedFile, this.state.selectedFile.name);\n        axios.post('http://localhost:5000/retinaImageUpload', imageData, {\n          headers: {\n            'accept': 'application/json',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': `multipart/form-data; boundary=${imageData._boundary}`\n          }\n        }).then(response => {\n          if (200 === response.status) {\n            //file size is larger than 2MB.\n            if (response.data.error) {\n              if ('LIMIT_FILE_SIZE' === response.data.error.code) {\n                this.displayAlert('Max size: 2MB', 'red');\n              } else {\n                console.log(\"Printing response data\" + response.data); // If not the given file type\n\n                this.displayAlert(response.data.error, 'red');\n              }\n            } else {\n              let fileName = response.data;\n              console.log('fileName', fileName);\n              this.displayAlert('File Uploaded', '#3089cf');\n            }\n          }\n        }).catch(error => {\n          this.displayAlert(error, 'red');\n        });\n      } else {\n        this.displayAlert('Please upload file', 'red');\n      }\n    };\n\n    this.displayAlert = (message, background = '#3089cf') => {\n      let alertContainer = document.querySelector('#alert-container'),\n          alertEl = document.createElement('div'),\n          textNode = document.createTextNode(message);\n      alertEl.setAttribute('class', 'oc-alert-pop-up');\n      $(alertEl).css('background', background);\n      alertEl.appendChild(textNode);\n      alertContainer.appendChild(alertEl);\n      setTimeout(function () {\n        $(alertEl).fadeOut('slow');\n        $(alertEl).remove();\n      }, 3000);\n    };\n\n    this.state = {\n      selectedFile: null,\n      selectedFiles: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"alert-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card border-light mb-3 mt-5\",\n        style: {\n          boxShadow: '0 5px 10px 2px rgba(195,192,192,.5)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: '#555',\n              marginLeft: '12px'\n            },\n            children: \"Single Image Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            style: {\n              marginLeft: '12px'\n            },\n            children: \"Upload Size: 250px x 250px ( Max 2MB )\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: \"Please upload retina image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            webkitdirectory: true,\n            onChange: this.singleFileChangedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info\",\n              onClick: this.singleFileUploadHandler,\n              children: \"Upload Retina Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["C:/Users/Checkout/Desktop/RetinaScan/Frontend/src/Components/ImageUpload.js"],"names":["React","Component","axios","$","ImageUpload","constructor","props","singleFileChangedHandler","event","setState","selectedFile","target","files","singleFileUploadHandler","imageData","FormData","state","append","name","post","headers","_boundary","then","response","status","data","error","code","displayAlert","console","log","fileName","catch","message","background","alertContainer","document","querySelector","alertEl","createElement","textNode","createTextNode","setAttribute","css","appendChild","setTimeout","fadeOut","remove","selectedFiles","render","boxShadow","color","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\n\r\nclass ImageUpload extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null,\r\n            selectedFiles: null\r\n        }\r\n    }\r\n\r\n    singleFileChangedHandler = (event) => {\r\n        this.setState({\r\n            selectedFile: event.target.files[0]\r\n        });\r\n    };\r\n\r\n    singleFileUploadHandler = (event) => {\r\n        const imageData = new FormData();\r\n        if (this.state.selectedFile) {\r\n            imageData.append(\"patientId\", 1234);\r\n            imageData.append('retinaImage', this.state.selectedFile, this.state.selectedFile.name);\r\n            axios.post('http://localhost:5000/retinaImageUpload', imageData, {\r\n                headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${imageData._boundary}`,\r\n                }\r\n            })\r\n                .then((response) => {\r\n                    if (200 === response.status) {\r\n                        //file size is larger than 2MB.\r\n                        if (response.data.error) {\r\n                            if ('LIMIT_FILE_SIZE' === response.data.error.code) {\r\n                                this.displayAlert('Max size: 2MB', 'red');\r\n                            } else {\r\n                                console.log(\"Printing response data\" + response.data);\r\n                                // If not the given file type\r\n                                this.displayAlert(response.data.error, 'red');\r\n                            }\r\n                        } else {\r\n                            let fileName = response.data;\r\n                            console.log('fileName', fileName);\r\n                            this.displayAlert('File Uploaded', '#3089cf');\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    this.displayAlert(error, 'red');\r\n                });\r\n        } else {\r\n            this.displayAlert('Please upload file', 'red');\r\n        }\r\n    };\r\n\r\n    displayAlert = (message, background = '#3089cf') => {\r\n        let alertContainer = document.querySelector('#alert-container'),\r\n            alertEl = document.createElement('div'),\r\n            textNode = document.createTextNode(message);\r\n        alertEl.setAttribute('class', 'oc-alert-pop-up');\r\n        $(alertEl).css('background', background);\r\n        alertEl.appendChild(textNode);\r\n        alertContainer.appendChild(alertEl);\r\n        setTimeout(function () {\r\n            $(alertEl).fadeOut('slow');\r\n            $(alertEl).remove();\r\n        }, 3000);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"alert-container\"></div>\r\n                <div className=\"card border-light mb-3 mt-5\" style={{ boxShadow: '0 5px 10px 2px rgba(195,192,192,.5)' }}>\r\n                    <div className=\"card-header\">\r\n                        <h3 style={{ color: '#555', marginLeft: '12px' }}>Single Image Upload</h3>\r\n                        <p className=\"text-muted\" style={{ marginLeft: '12px' }}>Upload Size: 250px x 250px ( Max 2MB )</p>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">Please upload retina image</p>\r\n                        <input type=\"file\" webkitdirectory onChange={this.singleFileChangedHandler} />\r\n                        <div className=\"mt-5\">\r\n                            <button className=\"btn btn-info\" onClick={this.singleFileUploadHandler}>Upload Retina Image</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}